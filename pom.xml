<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>fr.unice.polytech.si3.qgl</groupId>
	<artifactId>zecommit</artifactId> <!-- CHANGE ME -->
	<version>0.1-SNAPSHOT</version> <!-- CHANGE ME -->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- CHANGE ME IF NEEDED, other : ISO-8859-1 -->
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<junit.jupiter.version>5.5.1</junit.jupiter.version>
		<mockito.core.version>3.2.0</mockito.core.version>
		<jackson.databind.version>2.10.5.1</jackson.databind.version>
		<sonar.exclusions>
			**/visualisationtools/*.java,
			**/settings/*.java,
			**deckvizu/*.java
		</sonar.exclusions>
		<jmh.version>1.22</jmh.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.6.0.1398</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.4</version>
			</plugin>
			<plugin>
				<!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mutation</id>
				<build>
					<plugins>
						<plugin>
   							<groupId>org.pitest</groupId>
   							<artifactId>pitest-maven</artifactId>
   							<version>1.4.11</version>
   							<dependencies>
      							<dependency>
         							<groupId>org.pitest</groupId>
         							<artifactId>pitest-junit5-plugin</artifactId>
         							<version>0.12</version>
      							</dependency>
   							</dependencies>
   							<executions>
      							<execution>
         							<phase>test</phase>
         								<goals>
            								<goal>mutationCoverage</goal>
         								</goals>
      							</execution>
   							</executions>
   							<configuration>
      							<targetClasses>
         							<param>fr.unice.polytech.si3.qgl.zecommit*</param>
      							</targetClasses>
      							<targetTests>
         							<param>fr.unice.polytech.si3.qgl.zecommit*</param>
      							</targetTests>
   							</configuration>
						</plugin>

						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>exec-maven-plugin</artifactId>
							<version>1.6.0</version>
							<executions>
								<execution>
									<id>run</id>
									<goals>
										<goal>java</goal>
									</goals>
									<configuration>
										<mainClass>fr.unice.polytech.si3.zecommit.visualisationtools.Engine</mainClass> <!-- CHANGE ME -->
										<arguments>
											<argument>--illegal-access=permit</argument>
										</arguments>
									</configuration>
								</execution>
								<execution>
									<id>bench</id>
									<goals>
										<goal>exec</goal>
									</goals>
									<configuration>
										<executable>java</executable>
										<arguments>
											<argument>--illegal-access=permit</argument>
											<argument>-classpath</argument>
											<classpath/>
											<argument>fr.unice.polytech.si3.qgl.zecommit.visualisationtools.MyBenchmark</argument>
										</arguments>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</build>
		</profile>
	</profiles>

	<dependencies>
		<!-- Interface with referee /!\ do not touch !!! -->
		<dependency>
			<groupId>fr.unice.polytech.si3.qgl</groupId>
			<artifactId>regatta.cockpit</artifactId>
			<version>0.1-SNAPSHOT</version>
		</dependency>

		<!-- Serialization -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.databind.version}</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency> <!-- Junit 5 vintage to JUnit 4 might be necessary for some other tools -->
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.core.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Benchmarking -->
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-core</artifactId>
			<version>${jmh.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjdk.jmh</groupId>
			<artifactId>jmh-generator-annprocess</artifactId>
			<version>${jmh.version}</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
		  <id>io-labs-snapshots</id>
		  <url>https://nexus.io-labs.fr/repository/maven-snapshots/</url>
		</repository>
	</repositories>
</project>
